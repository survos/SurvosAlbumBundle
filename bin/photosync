#!/bin/sh
# 1st argument: path to configuration file (default ~/.photosync)

CONFIG_PATH=${1:-"$HOME/.photosync"}

if [ -f $CONFIG_PATH ]
then
    . $CONFIG_PATH
else
    cat << EOT > ~/.photosync
# Absolute path to the local directory
LOCAL_ROOT=""
# Absolute path to the remote directory
REMOTE_ROOT=""
# Remote server hostname
REMOTE_HOST=""
# Unison lost hostname (used only to keep consistent unison comparison)
UNISON_LOCALHOST_ID=""

# !!! REMOVE THESE LINES ONCE THE SETTINGS ARE CONFIGURED
echo "The first argument must either be a configuration file,"
echo " or you must edit the default configuration at ~/.photosync"
exit 1
EOT

    . ~/.photosync
    exit 1
fi

if [ "$LOCAL_ROOT" != "" ] && [ -d "$LOCAL_ROOT" ]
then
   echo "Source: $LOCAL_ROOT"
else
   echo "LOCAL_ROOT must be a valid directory in $CONFIG_PATH!"
   exit 1
fi

if [ "$REMOTE_HOST" == "" ]
then
   echo "2nd argument must be a valid remote hostname, accessible by ssh"
   exit 1
else
    PING=$(ssh -o ConnectTimeout=2 "$REMOTE_HOST" "[ -d '$REMOTE_ROOT' ] && echo 1" 2> /dev/null)
    if [ "1" != "$PING" ]
    then
        PING=$(ssh -o ConnectTimeout=2 "$REMOTE_HOST" 'echo 1' 2> /dev/null)
        if [ "1" != "$PING" ]
        then
            echo "Could not connect to $REMOTE_HOST by ssh. Try running 'ssh $REMOTE_HOST'"
        else
            echo "No folder $REMOTE_ROOT on $REMOTE_HOST"
            echo "3rd argument must be a valid directory path on the remote server"
        fi
        exit 1
    fi
fi

if [ "$UNISON_LOCALHOST_ID" != "" ]
then
    export UNISONLOCALHOST="$UNISON_LOCALHOST_ID"
fi


# First argument is the value in the file
countModules () {
  grep $1 $SCRIPTDIR/photosync-module-*.sh.run | wc -l
}

# Execute sub-modules
SCRIPTDIR=`dirname $0`
rm $SCRIPTDIR/photosync-module-*.sh.run 2>/dev/null
find $SCRIPTDIR -name 'photosync-module-*.sh' | while read module; do
  echo "executing $module"
  echo "1" > "$module.run"
  sleep 3 && . $module "$LOCAL_ROOT" >> ~/.photosync.log 2>&1 && echo "0" > "$module.run" &
done

# Prepare synchronisation
REMOTE_URI="ssh://$REMOTE_HOST/$REMOTE_ROOT"
FAT=""
mount=$(df "$LOCAL_ROOT" | grep /dev | grep -Eo '/Volumes/.*' | cut -f 3 -d '/')
diskutil list | grep "$mount" | grep "FAT" && FAT="-fat"

unison -ui text -batch $FAT "$LOCAL_ROOT" "$REMOTE_URI"

# Wait for modules to finish running
while [ $(countModules 1) -gt '0' ]
do
  echo "Waiting for $(countModules 1) modules to complete"
  sleep 2;
done

# Re-run synchronisation
if [ $(countModules 0) -gt '0' ]
then
  echo "$(countModules 0) modules finished... Rerunning sync"
  rm $SCRIPTDIR/photosync-module-*.sh.run  
  unison -ui text -batch $FAT "$LOCAL_ROOT" "$REMOTE_URI"
fi

echo "All done!"
